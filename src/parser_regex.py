from parser_shr_lr1 import parser_shr,ParserTable

class Parser:
    def __init__(self, ast_class, token_type=None):
        if token_type:
            globals()["TOKEN_TYPE"] = token_type

        self.ast_class = ast_class
        self.table: ParserTable = ParserTable.deserializer("{Wp48S^xk9=GL@E0stWa761SMbT8$j;A{63=3M|l0LTN&5drjL`>OkJfaFqb?t{G@KB584w`mfJy*MN8E|!}Lzl>m?;jwX4)IW(_*Q{U=qo1z&755_VN#Bn_gdh9k*Uw&XgbEJf?jBg#6mfhrEBzD2uk6VdU4ZFesxXjvgIFRqjs#*n_($)EXFOf3N6PI$RMsY*+v>4Es&#sQ)&xoP$oO}=$%@FWASS*LkHR-J%XJ}@T_N__3nO<mDyGJHMeGT;$V+GepI;oHQRKPW_sXjbgl@4c#+8H*pb^Piez*v1VH5}jdl8pmDll==MAKuP)~Kc`xPQ=PQ$pldhK}AN%xIHI$<K!r%p)ZdPHHoW!8`AtD@6P$GH?LeKbFfSR?9M@M;iljph($NOPJq{C?4qJIeF!Xn{jHpX`<+1uVNrrE~{VEX#8$%#_ZWzmqsQHWmgORK?@I&E=Dv-l@Ysg2%n*cKZspRcQK2A54l{Wzdw&&X7#gC4^%U$K;sNB7x+X+p9P&B9wArEP?26Ttibt+Aj3GpBud=yDvZ9AqP`Ji*8KpQp3sWJmN;H*iX5cU6YGVw?|7}XcBkh9EIki52?Tcq1_QW0v^SI#zL$6sVOYxu7?G2c*#}~uCiNr8|87NKVOc)5T?+#lfNHo>ereU(KV31-W$#25I3<L6*E?HYkWa%I5ZJZa+=dsn3LgW3#0&^{x%>1!j&;JO>=TxT+xnJnau(A5Ior&qE{+fZNprY8JfvW<PW2(F;ZSHNmDV>&S%Kb>l%<YpgtQucmE<_bVTSdvVQ6_hmzj*BO=F#Vh*g%ION=oD<<t%*j#~3qEHqW6OJVoFdOuvK24nBEXIo^Q;1;6ULS|iPA6yGds2{q%{ksz`@<R~*tt_e|CH4%ZDOl}@G&FOKEDVv$k?#}msep-g2OSR_?sy5xIR8~|`x)?_Xvt>x-|GReo%(A(vJLvV1sa=|I@v%4$5;hFcYW8GU@NpCF#XY&(a<H)Fag=f!x1~0B_^vt$9n4+Go@<dh`W=}RXu)9)iNPkUle90@JT7tWR6X_^IHQ);G5d4%!0X$zqZjeiFqo(%($G5@~23c4QmLH`I$3vYQB3;;3*H@ls!ViDD6-d*j?sph0#GWV@z>Pahni_SR9`@OBo#TomO;U%Z~`QW6d49U$jxt1;L)F!VU6^m`7Ng{MnBk{6W2LD4#oRMCc^%%O<Yc)Ee<Eom(W0F*$!;41zV!XeXq%YXn_q{urZIg@m8@Y#f}14xKb(Q*}x@I}ltZJqbUXMQ|6NETC^o{d<Q@vWIK|hXr62BO$X2%TQXnG2%bQEdGzOKi{b2UF_?a+C%xtXf6}|OAN{}X}*DaoR1o0!{|vOJyLn+&+tgt)ie5XZVm18yxguRJWLt>5fpi?d{#FwkwWT*@+z>`>p)e5Zj=tB6$x2<_QaCZ&PB|o7rnmY*eVtrjr;^1bR|@T)y8${{l-``5*_Kod3Jv;^=!A)<xc>lOGT_bh{J|ep&#Q`717{(BOdU-;mA8CMpQm{E1BesN$y)pTL|Mp5~Zg6t9+_BIL=*ur$l*-NsSRw8dKAoedDyVAPM%&<t_L#Zu7`R@v(_7@%74lb1laB<O&p&+c~1?RS4|I7uT4yQO$+iOLS3(0yR498eER(QQKVG37g1ch8l<LipBjr)RJ6}vjflDkh{Y<cozNIda{N)#O%YZ@3cRK93xYaVP-oZ)+V_kn16|Go-G)riA%&cW}O6=)Wf7k=)eCzY(#ql{<7qRT4bmPTlA&!=*i^lyGgX&`Z#%b7?uQggggcd+!vUm;r0N$<^}k8s}vb8JEQdwZ1r&ody~JaYQfx3U=_}-Rd<*H4CUn9#Po(-B%#P7o^;Nr;CZ16Oydgu5YogW=ishydTIsThogl%OreI@SU#q_$d+`3h2WV?lG@S2(yC{PY`-OyEt(2kVUPnYt;_9KU=R{3d=&P6HUFr7D`IB{estYD&@4O3eHAKAtvvJ04Wwi9o)6cmhdh3irr$u{f9=M{d(zu0A5lVTq}!}?!-tq)a;+c*TE%^e;Fw+T1Io7Z_0SaExa3UiL;D;`Z~bcwU8)gafUT~9obrlI7Il6lUDE5WXrMjwAvdPh=LweFgd9oq^O1UHXJ0|n>$yW9NJ7y)Q`LY`>FeA<Qfn77hjU+p%}Fs82!P3pTWMI3m^xlp1Op$e40}_qu_Te+;{R<H5XTP!s6^zAL&?ueCNfV;^&H}m0mg%N%60(!SsHt~grTq|7k#Gw#|0Hl@p@?NxK!F>?;yW`ATifLuDE6a5$3*h`xLv9AM%zSrE{^&0rAWCu)}imwn#*~a-xhIQ}G5rkti)Roguv?Q%M#ugWts7sNvzL`|pV5qodDMJm7ziua98)=fO?BAThY1lNL$MjrIVQ*_^y?d6yW?m}24pdgZG{0_5tq5MDLaLcum>#Xl!&x75CEe15i*!#CG+u9v)X#%lt*f2$dDmQqu4Py&U@N)nBsFT`x_pLt_!6395TD`!d66e7e!ghbc(unY$1eSqN%#e382>Z=Vn+ua6hrjH(Jv3Bm&{~A+Q3nZQH-#NNnxJaz83XtR62PvBfCWsk{s3<)1$l#iN(#;EsHWaAqwe_qZcyV8fIj(^A&C<N91hWlR;m!q{MHK^fC=g<QFy2B|tH9Zh!Kx}QclJ7YZ+BDMp8>_F+UggFh?l;z6L-48QuS+4NW<c(`3mO5<WI%Q>+W6R&)5bB%N(uf%~j@7_;45KDW1G0-6t?@;GEwRAoy8pp7pO$SYW%I<e-1&TMQqxvC-U-0tvWa<_KNR%IE;GQPwUUgS$BZG-|LPA`z$R$ZYfB-40*~f$P-Ft2!TFQJS2QFEnc<`s)~oI32NcZ<RP-Mb-BO(7^Z*{!=~KaUCyB)kPZ5#Ve{g&qZVqw1bd^B&fkjIu3FzRwf)hr)!oa;#)(vJQMY1;DL~h<<=0JdZn?zg?{j&jb6zZYF1p$lU(M;huVG0?(_vd;z61#oHncWE0{eZRCnd%AgyIZb@yL;rE~S*@c2Sj=Q7#Uz{7I{c|Y4Bq`+epXtB`jO;7Mv4{_k?-|o<^v#|z9;YCEj%Zz4?2CP;IZT9xtd{UYsMmI0O5*$D>If^j{XB$Gbt3lP?-LF88@NjsfpiE7~1;!Yco<PaM4h<i-+6m82g4NzAOB;r39X1grT`O#k6)7QJA|?SL1RIhgKGZL?K=9l2lk(D91T|p7JDi_QS>zym^6Yp}^esN?%F(?OU-T{OyuRE$tFc=K+#v8^vPpsl(cu+=HouJ)?9PZ6d4{auq|;fTNogIa(&6YJz<rV$DGS9(@<|z@4EV930I5;+c0|#?ecDM2E!GA1KTG@gu9EZ|C6Z2<yVGB-+ejYk<B5vIgz7Df)^{FHGwk8A=}=WM7A^Ry2Bw#5ssb!T*LL1d=Wz63Y(=nFYHp>30`)dTfh((hK)d3iGMl3bzI;L2;Q9<iwq9o-MN*QI+PP8t^I?h)-}++lli0VBlJV~4Ef)*0WnrYx(GV1fNY9vjPWVPVpZW54uY4We7>mm*CsnKtARBh&5dV=K*g*r|v=%{;>=0S{1r=t%ElTTKs5pimTVnaZR>nz8;7`j^sFAADv_{0YtI@<MN+u=GzVXbE{Ae@vW3VbH)FjC;q3w$gPBelUFE>d^VDuTNiX!C80=#7NC$goT0fa@5)|;oI{wl|9ZD1G6o?-C3w`Raid=qObe=p{2&@Htv5|uLZCheS(#_-}IC&jzEjh>q9M0*uHMF3qB%v8!OY0XJ$-qpKcUDxXHjx8|dng6i*#yy<2eNQwWK}FhzS(}<UqM33?kSW76junbnLPEt^_3xROFlh<7=4X0nBt2b9PaBSUq~NeKY*!zDN#dtA7WX=K7-mBGwsz`EKTs1<pfthm?82*4@E+4W?eF<X$%Kw=zvQ9zz6`aeF)|5kXK0~^p|F5IKyo3Mr&YT^ahP2JQ?4!scmRWps6Cj-9Uc^nI7MQsp5nXZMj8X$<PqB(nb32~zy(Pe!n=gXD#w)`3^0D-bK74~K#2zrN{UAMK@i#A6f;wk_WHO)VrBs32{)Xq*+E-WPSV_=v(YNuo7<9J79U0!5|LQRfg1o3D4|j1H^GaWiSx|nZX0|g0j|ao8uHHeW`nma8|TfFO>>0RHw}&<0JN^hpS%C*9RI?j`+?B=i2h9KdKk9LpMGHxXMe_uNHA8wI5no{f*A|O+~@QF)|jOHHxgAyx29v9=KMAI4uy)~v+z`~QmF#cc-$wJf=}ZvFP72JcAYbQJI{|#F2wZumT6AfY(#$BU|SQ?!Qx2?3v*}P5Wo`u5#Gz`rldYei;Yd5#QSRZRFMC#NL%ulg{{wPWhy1eC%--y!kHq*%9P<NQWfv9PN~FN!kWFb^8GCI8oLYgF!WnwPWLc~)XXd3<wc-h^JqC3m)y5)A&_<!@>OGO$|OXHGu*2ny4z8$Jl^>d!{HqhMOR8k{&HmBeVl%#ZHvPSeYhY_EqI!&9j!ZKEG&sMUD<-APuE>O&f9zEOK$-6bSgQp@X5wvt)>$Xd(hb~F9~bTZV!{B0JMZqSr~`RBGrqB$*ygH3DJLsc8~6omFk&h4ory-t<==t8&Odfu6*1yL-UD<lrCjO?A}hWCuguh<VhjxHLd7u{?!$Y1i1{kIB;V~L$>e0lTt`1q<iP-ZU;t)mGN^oN}WtTHN9l*SWb^!Y4IduOqZC-D}L3izyJHjZ+niw{e#r74rDyOr&)_{_uu^BvuyyoP}C?NuZaA#@jCr{mrkcoZOg1ZEay$=ocp3`6NGT{Ki{l#QMeAGj;Wb5x=O&{wG*@q%R8PYu6Fb^_Yu6HG$?DdNIWXGx{<I1P)j_6IR8*96&8={IuEK_R3lxsQ(X;9=5zuz2P^iYkIqM@HFm2w&BV8i!n0VmgJA&%lW<`B<uPUtM`H&IxSgKnW&LwPP$_~86Sq3|qMa@zCS1$?*-)d!@8XB6+RGf%@)~bySv@}65$>4P5FPt70kh<SUnTC6qHjuMtfvVQIy+(75!Ve(n9C)UuNEOlJo(D*Fl$)pf_>qMsi@Xi-6H_2ghhhHb~D8phAG_Z$WzC=Ecq$y3U!ZCy%5@D&ym_C1V1(jA?b6KC4KYNPS|<ES&$SgqkQaC%yUy&sVh7Bov7^xDZT{hcxB+dtR+RiO00X}N`MZjS6qzpc^P5O+$!pmCWY?2BH)Z2q%V}?Fkr^+T{1!SG@o5q2Z6g$JKk0rb30QmgaZOK$c$&>4jlx9BDk2tEE4htU{Bo3S@~4DyojE-<vDaI=$mE6o4=VA2Q1g@v=F<zaUs5a3V;B_jnhlf@stL3AH}M@$&@2eji@dF6EfWC91Iv7Vv>LtUrQ!asQ!E?J7AI(;GFK-Sn5v-b~!bA%5xmO%F&T{xkL;%0MWThoSW&|@2h#xZuQlvAP~)eGh1aArkwk89mKsly3yci+h1*`+v`__V<5T>l!4lf{9Bo9VO%#`qM+PgP#dkl87;<;-?IAIxdW>o1)|fcZ2#Y&YTBhC@>J^XQI%a!jQl2T5{vkexMq%D6OFv*8$o|<M$SnBQS`^cM+7bL8tL#F!eR=GDsz1<N~c-|0x|3ND{Dz)u9_xMrhs)q4g>vH6uW{Wp2qcOeOtCN=cSz8u~JW+b~`v~gxdF_newhZiST$Wgcd)*x{&tlxzoWTRIHfEmJ4X>TuM!M6J5i}`*>Y(B@dVfb&P9@&k->s&7Kj*7ESAgEHaVln#hVahC_6Wp>U$Ep{Q~S2qDhniFB=i4&q98m{J7@*SD}4?tRO9S7)uTSBIPLwN=8rJKh!Pq!ts+I7up4i7x`9ijbbNI$##{HB<ugYUvXJoKnGk6b2ECm;`~31MrIQ_WcV?S@NKqrL82^z%lh-XZ)a0JDS;K6c(;Lk-g37y1|Zm{+efv{vI~ZsFXwHnAU9db|-hlqg|)ik~kbuZN1KwtQ(Mqs4=@5uDbxV0H^k}@&b|zvSmy*9M9XSU7fUx3IJEdHA@?;uAkz--XST!3y-jPm^umFq9AU;YV4LafAJp`W;w>YZ9}^a7PCg-)mo7u8_(hm1;;THAIc<FWT45e3#{WWY;D(ui#_+vy{EpV`9lLuoDqznM#OcBg6!VXyh78TKLW`p5yAr!N96lb846oNuCC3e+aJ?k?|zdd=p}wUI;N^fkO~5pmN~xo5D<$_(Haq0bA7Jo_L{9@B>Kbq?|KBOZYHbEZ?6!p!PP9Gic)x_zFp99jG>dML@6;$C|~V275HYQO^O>+S5#&dW2>7mKdXlL^p80kCov;^*t(KAvwh#>`Q)z&m7tde@u?lE2(UPFch$wY%kJmy0mT-a-bEh|>D0?tnCyKI-lY77=2@nd=v6(zSp;Nz-?5wrwV#FA9LDB~#=wrQ)RmBL=g=RQ^YKO|3`(vz96S3-HUQl$8PRtW#hr?es?eIa0iHL@ow%5)j~TV2^$aLFyv&=d1m1_C9df2GfR_~Pmh38wFBp^2V?$!0i(ySHhMA}ZU1y?<xLXU_EG1!@FmQ6B%bvW^=2=WCHIwy2_NrUqxN57?8=HH616FPcd|bjZ3~0B!+dIulf2<L&PE%s8CU`c`T23h|cKnNg4pMiKCfkoh|Gwg}_6tX?oE^^+!yq=c&J@60*V5T@7YTdsFA|{6sCwUS+J+5xxvhe}<Xzf(T0tkpcY~Z$@puZ{_ZX~X>nlfixotK$UPO6=-*!pwiZUv_2)TyJ-QzGCk3)?pw6LBS=&5}Zv=`PgvFapcpwbF(iAL38LVscgn}Anq(v&T*A&y!o%=0-cK}Xi>@~i#u3j(s*9E{E&z|6M}>7?Mk!HY{L>ZKUJETx=)5fNE2lruIm{BUNWX31n;Tf%lb9gzUr&@xcxAZ>}z00000y$6ly^9pZT00Dw3_}2jd7kX34vBYQl0ssI200dcD")
        

    def __call__(self, tokens_list):
        return parser_shr(tokens_list,self.ast_class,self.table,attr_decoder)
        
def attr_decoder(attr, symbols_to_reduce, ast_class):
    if attr:
        if len(attr)==2:
            attr_class, attr_pos = attr
            args = list(map(lambda i: symbols_to_reduce[i].tag, attr_pos))
            return getattr(ast_class, attr_class)(*args)
        if len(attr) == 1:
            if isinstance(attr[0], int):
                attr_pos = attr[0]
                return symbols_to_reduce[attr_pos].tag
            elif isinstance(attr[0], str):
                attr_class = attr[0]
                arg = symbols_to_reduce[0].tag if len(symbols_to_reduce) else None
                return getattr(ast_class, attr_class)(arg)
            else:
                raise Exception("Invalid Attribute")
        else:
            raise Exception("Invalid Attribute")
    return symbols_to_reduce[0].tag if len(symbols_to_reduce) else None    
        



